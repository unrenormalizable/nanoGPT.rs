# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: cdp

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    branches: [master]

jobs:
  build-test-deploy-linux:
    name: Build, test & deploy (linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install musl tools
        run: |
              sudo apt-get install musl-tools

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: x86_64-unknown-linux-musl

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: build
          args: --release --target x86_64-unknown-linux-musl

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: test
          args: --release --target x86_64-unknown-linux-musl

  build-test-deploy-windows:
    name: Build, test & deploy (windows)
    runs-on: windows-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: i686-pc-windows-msvc

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: build
          args: --release --target i686-pc-windows-msvc

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: test
          args: --release --target i686-pc-windows-msvc

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings

  finish:
    name: Finish
    needs: [build-test-deploy-linux, build-test-deploy-windows, lints]
    runs-on: ubuntu-latest
    steps:
      - run: echo "Done..."
